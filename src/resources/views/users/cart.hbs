<div class="container">
    <div class="row">
        <table class="table" id="table"> 
            <thead>
                <tr>
                    <th>#</th>
                    <th>Tên truyện</th>
                    <th>Tập số</th>
                    <th>Giá Thuê/7 ngày</th>
                    <th>Giá truyện/1 cuốn</th>
                    {{!-- <th>Số lượng</th> --}}
                    <th>Hành động</th>
                </tr>
            </thead>
            <tbody>
                {{#each cart.items}}
                    <tr class="row-data" data-id="{{this.bookId._id}}">
                        <th>{{sum @index 1}}</th>
                        <th name="nameManga" class="nameManga">{{this.bookId.nameManga}}</th>
                        <th name="episode" class="episode">{{this.bookId.episode}}</th>
                        <th name="rentCost" class="rentCost">{{this.bookId.rentCost}}</th>
                        <th name="cost" class="cost">{{this.bookId.cost}}</th>
                        {{!-- <th name="amount" class="amount">
                            <button class="amountPlus" style="border: none;" data-id="{{this.bookId._id}}">
                                <i class="fas fa-plus"></i>
                            </button>

                            <span class="valueAmount">{{this.amount}}</span>
                            
                            <button class="amountMinus" style="border: none" data-id="{{this.bookId._id}}"> 
                                <i class="fa fa-minus" aria-hidden="true"></i>
                            </button> 
                        </th> --}}
                        <th name="amountBook" class="amountBook" hidden>{{this.bookId.amount}}</th>
                        <th>
                            <button class="btn btn-danger btn-delete-item" data-id="{{this.bookId._id}}">Xóa</button>
                        </th>
                    </tr>
                {{/each}}
                    
                <tr>
                    <td colspan="2">Số ngày thuê: 7 ngày/1 lần</td>  
                    <td colspan="4" style="text-align: right;">
                        <b>Tiền cọc:</b>
                        <span id="totalCost"></span>đ
                    </td>  
                
                </tr>
                <tr>
                    <td colspan="6" style="text-align: right;">
                        <b>Tiền thuê truyện: </b>
                        <span id="totalRentCost"></span>đ
                    </td>   
                </tr>
                <tr>
                    <td colspan="6" style="text-align: right;">
                        <b> Tổng tiền:</b>
                        <span class="tong-tien">{{cart.totalPrice}}</span>đ
                    </td>
                </tr>
            </tbody>
                
        </table>
        <form name="form-rentals" class="ml-auto mr-5"method="POST">
            <input type="hidden" name="totalPrice" value="{{cart.totalPrice}}">
            <button type="submit" class="btn btn-success submitForm disabled" id="submitForm">Xác nhận</button>
        </form>
            
    </div>
</div>
<script>
    document.addEventListener("DOMContentLoaded",function(){
        var btnDeleteItem = document.querySelectorAll('.btn-delete-item')
        var rowData = document.querySelectorAll('.row-data')
        var cartItem = document.querySelector('.cart-item')
        var form = document.forms['form-rentals']
        var submitForm = $('.submitForm')
        //var minusEl = $('.amountMinus')
        var tongtienEl = document.querySelector('.tong-tien')   
        var discountEl = document.getElementById('discount')
        //var amountPlus = document.querySelectorAll('.amountPlus')
        //var amountMinus = document.querySelectorAll('.amountMinus')
        var valueAmount = document.getElementsByClassName('valueAmount')
        var elTable = document.getElementById('table')
        var totalRentCost = document.getElementById('totalRentCost')
        var totalCost = document.getElementById('totalCost')
        //Biến tiền
        var valueTotalCost = 0//biến tổng tiền cọc
        var valueTotalRentCost = 0//biến tông tiền thuê

        //Hàm format tiền --- https://stackoverflow.com/questions/149055/how-to-format-numbers-as-currency-strings
        Number.prototype.format = function(n =0, x=3, s='.', c =',') {
            var re = '\\d(?=(\\d{' + (x || 3) + '})+' + (n > 0 ? '\\D' : '$') + ')',
                num = this.toFixed(Math.max(0, ~~n));

            return (c ? num.replace('.', c) : num).replace(new RegExp(re, 'g'), '$&' + (s || ','));
        };
        

        {{!-- Hàm kiểm tra nút xác nhận --}}
        function checkRowData(table){
            var checkedLength = table.rows.length
            if (checkedLength > 4){
                submitForm.removeClass('disabled')
            }else{
                submitForm.addClass('disabled')
            }
        }

        checkRowData(elTable)

        //Tổng tiền thuê
        rowData.forEach((row, i) => {
            var rowRentCost = row.querySelector('.rentCost').innerText
            valueTotalRentCost += rowRentCost * 1
            totalRentCost.innerText =  valueTotalRentCost
        })

        //Tông tiền cọc
        rowData.forEach((row) => {
            var rowCost = row.querySelector('.cost').innerText
            valueTotalCost += rowCost * 1 + rowCost * 0.25//Tổng tiền cọc
            totalCost.innerText =  valueTotalCost
        })

        {{!-- Hàm tăng số lượng lên 1 --}}
        //amountPlus.forEach((plus, i) => {
        //    plus.onclick = function(){
        //        tongtienEl.innerText = ''
        //        var value = valueAmount[i].innerText//lấy giá trị hiển tại
        //        var amountPlus = parseInt(value) +1//tăng lên 1
        //        valueAmount[i].innerText = amountPlus
        //        var idItem = this.getAttribute("data-id")
        //        axios.post('/cart/plus/' + idItem)
        //        .then((res)=>{
        //            const totalPrice = res.data.totalPrice
        //            tongtienEl.innerText = totalPrice
        //        })
        //        .catch((err)=>{
        //            console.log(err)
        //        })
        //    }
        //})


        {{!-- Hàm giảm số lượng đi 1 --}}
        //amountMinus.forEach((minus, i) => {
        //    minus.onclick = function(){              
        //        var value = valueAmount[i].innerText//lấy giá trị hiển tại
        //        var amountMinus = parseInt(value) -1//trừ 1
        //        var flag = 1
        //        if(amountMinus < 1){
        //            alert('Không thể giảm!!!')
        //            flag = 0
        //        }
        //        else{
        //            valueAmount[i].innerText = amountMinus
        //        } 
        //        var idItem = this.getAttribute("data-id")
        //        if(flag == 1){
        //            tongtienEl.innerText = ''
        //           axios.post('/cart/minus/' + idItem)
        //            .then((res)=>{
        //                const totalPrice = res.data.totalPrice
        //                tongtienEl.innerText = totalPrice
        //            })
        //            .catch((err)=>{
        //                console.log(err)
        //            })
        //        }        
        //    }
        //})

        {{!-- Hàm xóa truyện ra khỏi giỏ hàng --}}
        btnDeleteItem.forEach(btn =>{
            btn.onclick = function (){
                var tempCost = this.parentElement.parentElement.querySelector('.cost').innerText
                var tempRentCost = this.parentElement.parentElement.querySelector('.rentCost').innerText
                //tongtienEl.innerText = 0
                cartItem.innerText = ""
                totalRentCost.innerText -= parseInt(tempRentCost)
                totalCost.innerText -= parseInt(tempCost) + parseInt(tempCost) * 0.25
                var idItem = this.getAttribute("data-id")
                let table = this.parentElement.parentElement.parentElement.parentElement
                this.parentElement.parentElement.remove()
                checkRowData(table)//Kiểm tra lại giỏ hàng trống hay ko
                axios.post('/deleteItem/' + idItem)
                .then((res)=>{
                    const totalPrice = res.data.cart.totalPrice
                    const totalItem = res.data.cart.totalItem
                    tongtienEl.innerText = totalPrice
                    cartItem.innerText = totalItem
                    
                })
                .catch((err)=>{
                    console.log(err)
                })
            }
        })

        {{!-- Hàm thực thi khi bấm submit --}}
        form.addEventListener("submit", async function(e){
            e.preventDefault()
            const items = []
            //var numberRental = form.numberRental.value
            var totalPrice = tongtienEl.innerText
            let socket = io({path: "/socket.io/rental"});

            var flag = 1
            var rowData = this.parentElement.querySelector('.table').querySelectorAll('.row-data')
            rowData.forEach((row, i) => {
                var nameManga = row.querySelector('.nameManga').innerText
                var episode = row.querySelector('.episode').innerText
                var rentCost = row.querySelector('.rentCost').innerText
                //var amount = valueAmount[i].innerText
                var amountBook = row.querySelector('.amountBook').innerText
                console.log('kho', amountBook ,' < ' , 1)
                if(parseInt(amountBook) < 1){    
                    console.log(amountBook ,' < ' , amount)
                    flag = 0
                }
                else{
                    items.push({
                        nameMang: nameManga,
                        episode: episode,
                        rentCost: rentCost,
                        //amount: amount,   
                    })
                }  
            })
                          

            if(flag == 0){
                alert('Số lượng ko đủ!')
            }
            if(flag == 1){
                axios.post('/rentals',{
                items: items,
                totalPrice: parseInt(totalPrice),
                //numberRental: numberRental,
                })
                .then(async (res)=>{
                    let data = res.data.cartEl
                    socket.emit('cart', data)   
                    var success  = await res.data.message
                    alert(success)
                    if(success == 'Tạo đơn hàng thành công'){
                        location.assign('/')
                    }
                })
                .catch((err)=>{
                    console.log(err)
                })
            }
            
        })
    })
</script>