
<div class="top-bar">
	<div class="container">
		<div class="level">
			<div class="level-left">
				<span class="logo">
					<a href="/">TruyenDK</a>
				</span>
				<div class="top-search">
					<input type="text" class="text-search" placeholder="Nhập gì đó...">
					<button class="btn_search btn-submit"></button>
				</div>
			</div>
			<div class="level-right">
				<ul class="top-links">
					<li class="items">
						<a href="/rental">Truyện cho thuê</a>
					</li>
					<li class="items">
						<a href="/listfollow">Theo dõi truyện</a>
					</li>
					<li class="items">
						<span class="btn-notify">
							<i class="far fa-bell"></i>
							<span class="notify-number">0</span>
						</span>
						<div class="list-notifies-box">
							<div class="overlay"></div>
							<ul class="list-notifies"></ul>
						</div>
					</li>
					{{!-- <li>
						<a href="/category">Thể loại</a>
					</li> --}}
					<li class="items">
						<a href="/cart">
							<span>
								<i class="fas fa-shopping-cart cart-item">
									{{#if (isdefined user.cart.totalItem)}}
										{{user.cart.totalItem}}
									{{else}}
										Giỏ hàng
									{{/if}}

								</i>
							</span>
						</a>
					</li>
				</ul>
				<div class="top-buttons has-login">
					{{#if user}}
						<span class="far fa-user user-manager"></span>
						<ul class="list-user-manager">
							
							<li class="items">
								<i class="far fa-user"></i>
								<a class="content" style="text-decoration:none"  href="/account">Quản lý tài khoản</a>
							</li>
							<li class="items">
								<i class="fas fa-history"></i>
								<a class="content" style="text-decoration:none"  href="/account/rentals-history">Xem lịch sử thuê truyện</a>
							</li>
							<li class="items">
								<i class="fas fa-lock"></i>
								<a class="content" style="text-decoration:none"  href="/account/change-password">Đổi mật khẩu</a>
							</li>
							<li class="items">
								<i class="fas fa-sign-out-alt"></i>
								<a class="content" style="text-decoration:none"  href="/logout">Đăng Xuất</a>
							</li>
						</ul>
					{{else}}
						<button class="login-btn" >
							<a  style="text-decoration:none; color: white !important;" href="/login">Đăng nhập</a>
						</button>
						<button class="register-btn" >
							<a  style="text-decoration:none; color: white !important;" href="/register">Đăng ký</a>
						</button>
					{{/if }}
				</div>
			</div>
		</div>
	</div>
</div>

<script>
	document.addEventListener("DOMContentLoaded",()=>{
		var numberNewNotify = 0;
		document.querySelector(".user-manager").onclick = function(e) {
			this.classList.toggle("active");
		}

		document.querySelector(".btn-notify").onclick = function(e) {
			this.classList.add("active");
			numberNewNotify = 0;
			document.querySelector(".btn-notify .notify-number").innerText = numberNewNotify;
		}
		document.querySelector(".list-notifies-box .overlay").onclick = function(e) {
			document.querySelector(".btn-notify").classList.remove("active");
		}

		function formatTime(time) {
			let timeNow = new Date().getTime();
			let timeCreate = new Date(time);
			let seconds = Math.floor((timeNow - timeCreate.getTime())/1000);
			if (seconds > (60*60*24)) {
				let day = timeCreate.getDate();
				let month = timeCreate.getMonth() + 1;
				return `${day} tháng ${month}`;
			} else {
				let minutes = Math.floor(seconds/60);
				let hour = Math.floor(minutes/60);
				if (seconds == 0)
					return "Vừa xong";
				else if (minutes == 0 && hour == 0)
					return `${seconds} giây trước`;
				else if (hour > 0) 
					return `${hour} giờ trước`;
				else
					return `${minutes} phút trước`;
			}
		}

		function formatDuplicate(arr) {
			let arrNew = [];
			arr.forEach(v => {
				let check = false;
				arrNew.forEach(v2 => {
					if (v == v2) {
						check = true;
					}
				})
				if (!check) {arrNew.push(v)}
			});
			return arrNew;
		}

		axios.get("/notifies")
		.then((res)=>{
			res.data.notification.forEach((notify)=>{
				let time = formatTime(notify.createdAt);
				let content = `Truyện ${notify.idManga.nameManga} vừa cập nhật chap ${notify.idChapter.chapter}`;
				let link = `/manga/${notify.idManga.slug}/${notify.idChapter.chapter}`;
				$(".list-notifies").append(`
					<li>
						<a href="${link}">
							<img src="/img/${notify.idManga.image}" alt="" class="avt">
							<span>
								<div class="content">${content}</div>
								<div class="time">${time}</div>
							</span>
						</a>
					</li>
				`);
			});	
			let socket = io({
				query: {
					mangas: res.data.listFollow.idManga
				},
				path: "/socket.io/notify"
			});
			socket.on("new_notify", (data)=>{
				let time = formatTime(data.createdAt);
				let content = `Truyện ${data.manga.nameManga} vừa cập nhật chap ${data.chapter.chapter}`;
				let link = `/manga/${data.manga.slug}/${data.chapter.chapter}`;
				$(".list-notifies").prepend(`<li>
					<a href="${link}">
						<img src="/img/${data.manga.image}" alt="" class="avt">
						<span>
							<div class="content">${content}</div>
							<div class="time">${time}</div>
						</span>
					</a>
				</li>`);
				numberNewNotify++;
				document.querySelector(".btn-notify .notify-number").innerText = numberNewNotify;
			});
		})
		.catch((err)=>{
			console.log(err)
		})
	})
</script>


