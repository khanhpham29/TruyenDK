
<div class="top-bar">
	<div class="container">
		<div class="level">
			<div class="level-left">
				<span class="logo">
					<a href="/">TruyenDK</a>
				</span>
				<div class="top-search search-input">
					<input type="text" id="search" class="text-search" placeholder="Nhập gì đó..." autocomplete="off">
					<div class="list-results">
						<div id="match-list" class="list-container">
							
						</div>
					</div>
				</div>
			</div>
			<div class="level-right">
				<ul class="top-links">
					<li class="items">
						<a href="/history">Lịch sử</a>
					</li>
					<li class="items">
						<a href="/rental">Truyện cho thuê</a>
					</li>
					{{#if user}}
					<li class="items">
						<span class="btn-notify">
							<i class="far fa-bell"></i>
							<span class="notify-number">0</span>
						</span>
						<div class="list-notifies-box">
							<div class="overlay"></div>
							<ul class="list-notifies"></ul>
						</div>
					</li>
					{{!-- <li>
						<a href="/category">Thể loại</a>
					</li> --}}
						<li class="items">
							<a href="/cart">
								<span>
									<i class="fas fa-shopping-cart cart-item">
										{{#if (isdefined user.cart.totalItem)}}
											{{user.cart.totalItem}}
										{{else}}
											Giỏ hàng
										{{/if}}
									</i>
								</span>
							</a>
						</li>
					{{/if}}
				</ul>
				<div class="top-buttons has-login">
					{{#if user}}
						{{#if user.avatar}}
							<div class="user-manager user-manager-avatar">
								<img src="../../../img/{{user.avatar}}" alt="" width="30px" height="30px">
							</div>
						{{else}}
							<span class="far fa-user user-manager"></span>
						{{/if}}
						<ul class="list-user-manager">
							<li class="items">
								<i class="far fa-user"></i>
								<a class="content" style="text-decoration:none"  href="/account">Quản lý tài khoản</a>
							</li>
							<li class="items">
								<i class="fas fa-history"></i>
								<a class="content" style="text-decoration:none"  href="/account/rentals-history">Xem lịch sử thuê truyện</a>
							</li>
							<li class="items">
								<i class="fas fa-lock"></i>
								<a class="content" style="text-decoration:none"  href="/account/change-password">Đổi mật khẩu</a>
							</li>
							<li class="items">
								<i class="fas fa-sign-out-alt"></i>	
								<a class="content" style="text-decoration:none"  href="/logout">Đăng Xuất</a>
							</li>
						</ul>
					{{else}}
						<button class="login-btn" >
							<a  style="text-decoration:none; color: white !important;" href="/login">Đăng nhập</a>
						</button>
						<button class="register-btn" >
							<a  style="text-decoration:none; color: white !important;" href="/register">Đăng ký</a>
						</button>
					{{/if }}
				</div>
			</div>
		</div>
	</div>
</div>

<script>
	document.addEventListener("DOMContentLoaded",()=>{
		// Đặt biến
		var numberNewNotify = 0;
		var userManager  = document.querySelector(".user-manager")
		var searchWrapper = document.querySelector('.search-input')
		var listResults = document.querySelector('.list-results')
        var search = document.getElementById('search')
        var matchList = document.getElementById('match-list')
		console.log(search)
		console.log(matchList)
		console.log(searchWrapper)


		// hàm xử lý
		var searchMangas =  searchText =>{
            if(searchText.length === 0){
                matches = [];
                searchWrapper.classList.remove("active")
                matchList.innerHTML = ''
                return false;
            }
            axios.get("/manga/searchManga")
            .then((res)=>{
				console.log(res.data.mangas)
                const mangas = res.data.mangas
                // khớp với kiểu nhập văn bản hiện tại
                let matches = mangas.filter(manga =>{
                    const regex = new RegExp(`${searchText}`, 'giu')
                    return manga.nameManga.replace(/\s/gis, "").match(regex) || manga.otherName.replace(/\s/gis, "").match(regex)
                })
                if(matches.length === 0){
                    searchWrapper.classList.remove("active")
                    listResults.classList.remove("open")
                    matchList.innerHTML = ''
                }
                outputHtml(matches)
            })
			.catch((err)=>{
				console.log(err.response)
			})
        }
		const outputHtml = matches =>{
            if(matches.length >0){
                const html = matches.map(match =>`
					<div class="result-item">
						<a href="/admin/manga/${match.slug}">
							<div class="media">
								<div class="media-left">
									<p class="image">
										<img src="/img/${match.image}" alt="">
									</p>
								</div>
								<div class="media-content">
									<h4> ${match.nameManga}</h4>
									<h5> ${match.otherName}</h5>
								</div>
							</div>
						</a>
					</div>
                `)
                .join('');
                searchWrapper.classList.add("active")
                listResults.classList.add("open")
                matchList.innerHTML = html
            }
        }
        search.addEventListener('input', ()=> searchMangas(search.value.replace(/\s/gis, "").toLowerCase()))
		if(userManager){
			userManager.onclick = function(e) {
				this.classList.toggle("active");
			}

			document.querySelector(".btn-notify").onclick = function(e) {
				this.classList.add("active");
				numberNewNotify = 0;
				document.querySelector(".btn-notify .notify-number").innerText = numberNewNotify;
			}
			document.querySelector(".list-notifies-box .overlay").onclick = function(e) {
				document.querySelector(".btn-notify").classList.remove("active");
			}

			function formatTime(time) {
				let timeNow = new Date().getTime();
				let timeCreate = new Date(time);
				let seconds = Math.floor((timeNow - timeCreate.getTime())/1000);
				if (seconds > (60*60*24)) {
					let day = timeCreate.getDate();
					let month = timeCreate.getMonth() + 1;
					return `${day} tháng ${month}`;
				} else {
					let minutes = Math.floor(seconds/60);
					let hour = Math.floor(minutes/60);
					if (seconds == 0)
						return "Vừa xong";
					else if (minutes == 0 && hour == 0)
						return `${seconds} giây trước`;
					else if (hour > 0) 
						return `${hour} giờ trước`;
					else
						return `${minutes} phút trước`;
				}
			}

			function formatDuplicate(arr) {
				let arrNew = [];
				arr.forEach(v => {
					let check = false;
					arrNew.forEach(v2 => {
						if (v == v2) {
							check = true;
						}
					})
					if (!check) {arrNew.push(v)}
				});
				return arrNew;
			}

			axios.get("/notifies")
			.then((res)=>{
				res.data.notification.forEach((notify)=>{
					let time = formatTime(notify.createdAt);
					let content = `Truyện ${notify.idManga.nameManga} vừa cập nhật chap ${notify.idChapter.chapter}`;
					let link = `/manga/${notify.idManga.slug}/${notify.idChapter.chapter}`;
					$(".list-notifies").append(`
						<li>
							<a href="${link}">
								<img src="/img/${notify.idManga.image}" alt="" class="avt">
								<span>
									<div class="content">${content}</div>
									<div class="time">${time}</div>
								</span>
							</a>
						</li>
					`);
				});	
				let socket = io({
					query: {
						mangas: res.data.listFollow.idManga
					},
					path: "/socket.io/notify"
				});
				socket.on("new_notify", (data)=>{
					let time = formatTime(data.createdAt);
					let content = `Truyện ${data.manga.nameManga} vừa cập nhật chap ${data.chapter.chapter}`;
					let link = `/manga/${data.manga.slug}/${data.chapter.chapter}`;
					$(".list-notifies").prepend(`<li>
						<a href="${link}">
							<img src="/img/${data.manga.image}" alt="" class="avt">
							<span>
								<div class="content">${content}</div>
								<div class="time">${time}</div>
							</span>
						</a>
					</li>`);
					numberNewNotify++;
					document.querySelector(".btn-notify .notify-number").innerText = numberNewNotify;
				});
			})
			.catch((err)=>{
				console.log(err)
			})
		}	
		
	})
</script>


